package vastblue.time

import vastblue.pallet.*
import vastblue.time.ParsDate
import vastblue.time.TimeDate.{parseDateTime => parseDate}
import vastblue.time.TimeDate.*

import org.scalatest.funspec.AnyFunSpec
import org.scalatest.matchers.should.Matchers

import TestDates.*

import TestDates.hook

class ParsDateTests extends AnyFunSpec with Matchers {
  // TODO: ParsDate(datestring: String, monthDayOrder: String = "MD")

  describe("parseDateTime") {
    for ((teststr, expected) <- TestDates.testDates) {
      it(s"should properly parse input timestamp ${teststr}") {
        var pdDate = parseDate(teststr)
        val pds    = pdDate.toString("yyyy/MM/dd")
        if (pds != expected) {
          hook += 1
        }
        assert(pds == expected)
      }
    }
  }

  describe("ParsDate") {
    for ((teststr, expected) <- TestDates.testStamps) {
      if (!badDates.contains(teststr)) {
        it(s"should properly parse input date string ${teststr}") {
          if (teststr.startsWith("08/04/2009")) {
            hook += 1
          }
          var pdDate = ParsDate(teststr)
          val pds    = pdDate.toString("yyyy/MM/dd")
          if (pds != expected) {
            hook += 1
          }
          assert(pds == expected)
        }
      }
    }
    for (teststr <- TestDates.testDates2) {
      if (!badDates.contains(teststr)) {
        it(s"should properly parse input timestamp ${teststr}") {
          val pdDate: ParsDate  = ParsDate(teststr)
          val Array(ys, ms, ds) = pdDate.toString("yyyy/MM/dd").split("/")

          val y: Int = toInt(ys)
          val m: Int = toInt(ms)
          val d: Int = toInt(ds)

          assert(y >= 1900 && y <= 2100)
          assert(m >= 1 && m <= 12)
          assert(d >= 1 && d <= 31)

          assert(pdDate.getYear == y)
          assert(pdDate.getMonth == m)
          assert(pdDate.getDay == d)
        }
      }
    }
  }
}
// format: off
object TestDates {
  var hook = 0

  def toInt(s: String): Int = s.dropWhile(_ == '0') match {
  case ""  => 0
  case str => str.toInt
  }

  // format off
  lazy val testDates = List(
    ("Apr12-11",                   "2011/04/12"),
    ("apr12-11",                   "2011/04/12"),
    ("11-Apr-2016",                "2016/04/11"),
    ("01/04/15",                   "2015/01/04"),
    ("May 16,2014",                "2014/05/16"),
    ("1992/04/13 23:59",           "1992/04/13"), // yyyy/MM/dd HH:mm
    ("1992/01/01",                 "1992/01/01"), // yyyy/MM/dd
    ("8/04/2009 17:09:46 -0700",   "2009/08/04"), // M/dd/yyyy HH:mm:ss -0700
    ("31/05/2009 08:59:59 -0000",  "2009/05/31"), // MM/dd/yyyy hh:mm:ss -0000
    ("31/05/2009 02:20:13 -0700",  "2009/05/31"), // MM/dd/yyyy hh:mm:ss -0700
    ("2/11/2009 16:34:32 -0800",   "2009/02/11"), // M/dd/yyyy HH:mm:ss -0800
 // ("04/08 18:17:08 2009",        "2009/04/08"), // MM/dd HH:mm:ss yyyy
    ("05/06/1993",                 "1993/05/06"), // MM/dd/yyyy
    ("2009/03/24 21:48:25.0",      "2009/03/24"), // yyyy/MM:dd HH:mm:ss.S
    ("2009/03/30 22:10:03",        "2009/03/30"), // yyyy/MM/dd HH:mm:ss
  )

  lazy val testStamps = List(
    ("Fri Jan 10 2014 2:34:17 PM EST",         "2014/01/10"),
    ("04/13/1992 11:59 PM",                    "1992/04/13"),
    ("04/13/1992 12:01 PM",                    "1992/04/13"),
    ("1992/01/01",                             "1992/01/01"),
    ("May 16,2014",                            "2014/05/16"),
    ("1992/03/04",                             "1992/03/04"),
    ("08/04/2009 17:09:46 -0700",              "2009/08/04"),
    ("8/04/2009 17:09:46 -0700",               "2009/08/04"),
    ("31/05/2009 08:59:59 -0000",              "2009/05/31"),
    ("31/05/2009 02:20:13 -0700",              "2009/05/31"),
    ("2/11/2009 16:34:32 -0800",               "2009/11/02"),
    ("22/11/1992 07:25:19 -0800",              "1992/11/22"),
    (     "01 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    (     "01 Jan 2001 12:34:56 -0700 (MDT)",  "2001/01/01"),
    (     "01 Jan 2001 12:34:56 -0700 MDT",    "2001/01/01"),
    (      "1 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    ("Mon, 01 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    ("Mon, 01 Jan 2001 12:34:56 -0700 (MDT)",  "2001/01/01"),
    ("Mon,  1 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    ("Mon,  1 Jan 2001 12:34:56 -0700 (MDT)",  "2001/01/01"),
    ("Mon, 01 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    ("Mon, 01 Jan 2001 12:34:56 -0700 (CEST)", "2001/01/01"),
    ("Mon, 01 Jan 2001 12:34:56 -0700 (MDT)",  "2001/01/01"),
    ("Mon,  1 Jan 2001 12:34:56 -0700",        "2001/01/01"),
    ("Mon,  1 Jan 2001 12:34:56 -0700 (MDT)",  "2001/01/01"),
    ("04/12/1992 01:58 PM",                    "1992/04/12"),
    ("04/12/1992 02:46 PM",                    "1992/04/12"),
    ("1992/04/13 23:59",                       "1992/04/13"),
    ("04/13/1992 11:59 PM",                    "1992/04/13"),
    ("04/13/1992 12:01 PM",                    "1992/04/13"),
    ("04/13/1992 12:50 PM",                    "1992/04/13"),
    ("9/29/2008 2:19:51 PM",                   "2008/09/29"),
    ("9/29/2008 12:00:00 AM",                  "2008/09/29"),
    ("9/29/2008 2:07:18 PM",                   "2008/09/29"),
    ("9/29/2008 2:06:17 PM",                   "2008/09/29"),
    ("9/29/2008 2:05:51 PM",                   "2008/09/29"),
    ("11/12/2008 10:20:06 AM",                 "2008/11/12"),
    ("11/12/2008 12:00:00 AM",                 "2008/11/12"),
    ("12/2/2008 6:49:53 PM",                   "2008/12/02"),
    ("12/2/2008 12:00:00 AM",                  "2008/12/02"),
    ("1/10/2009 4:05:57 PM",                   "2009/01/10"),
    ("1/10/2009 12:00:00 AM",                  "2009/01/10"),
    ("2/5/2009 1:31:58 PM",                    "2009/02/05"),
    ("2/5/2009 12:00:00 AM",                   "2009/02/05"),
    ("2/10/2009 6:51:43 PM",                   "2009/02/10"),
    ("2/10/2009 12:00:00 AM",                  "2009/02/10"),
    ("3/10/2009 7:34:33 PM",                   "2009/03/10"),
    ("3/10/2009 12:00:00 AM",                  "2009/03/10"),
    ("3/13/2009 5:17:15 PM",                   "2009/03/13"),
    ("3/13/2009 12:00:00 AM",                  "2009/03/13"),
    ("2009/03/24 21:48:25.0",                  "2009/03/24"),
    ("2009/03/29 22:16:00",                    "2009/03/29"),
    ("2009/03/29 22:19:00",                    "2009/03/29"),
    ("2009/03/30 22:10:03",                    "2009/03/30"),
    ("2009/03/30 07:23:00",                    "2009/03/30"),
    ("2009/03/30 13:23:00",                    "2009/03/30"),
    ("2009/03/30 13:25:14",                    "2009/03/30"),
    ("2009/03/30 13:46:30",                    "2009/03/30"),
    ("2009/03/30 04:16:00",                    "2009/03/30"),
    ("2009/03/30 04:18:36",                    "2009/03/30"),
    ("2009/03/30 04:59:31",                    "2009/03/30"),
    ("2009/03/30 16:00:56",                    "2009/03/30"),
    ("2009/03/30 16:31:40",                    "2009/03/30"),
    ("2009/03/30 04:19:00",                    "2009/03/30"),
    ("2009/03/30 04:20:35",                    "2009/03/30"),
    ("2009/03/30 05:23:40",                    "2009/03/30"),
    ("2009/03/31 16:48:00",                    "2009/03/31"),
    ("2009/03/31 22:48:00",                    "2009/03/31"),
    ("2009/03/31 22:49:15",                    "2009/03/31"),
    ("2009/03/31 23:13:10",                    "2009/03/31"),
  //("04/08 18:17:08 2009",                    "2009/04/08"),
    ("4/10/2009 6:52:34 PM",                   "2009/04/10"),
    ("4/10/2009 12:00:00 AM",                  "2009/04/10"),
    ("2009/04/20 04:36:03",                    "2009/04/20"),
    ("2009/04/20 04:47:34",                    "2009/04/20"),
    ("2009/04/26 23:30:00",                    "2009/04/26"),
    ("2009/04/27 05:30:00",                    "2009/04/27"),
    ("2009/04/29 23:30:00",                    "2009/04/29"),
    ("2009/04/30 23:30:00",                    "2009/04/30"),
    ("2009/04/30 05:30:00",                    "2009/04/30"),
    ("2009/05/01 05:30:00",                    "2009/05/01"),
    ("2009/05/01 23:30:00",                    "2009/05/01"),
    ("2009/05/02 05:30:00",                    "2009/05/02"),
    ("5/10/2009 3:55:39 PM",                   "2009/05/10"),
    ("5/10/2009 12:00:00 AM",                  "2009/05/10"),
    ("5/21/2009 5:37:39 PM",                   "2009/05/21"),
    ("5/21/2009 12:00:00 AM",                  "2009/05/21"),
  ).distinct // remove duplicates

  lazy val badDates = List(
    "Wed, Apr 08 18:17:08 2009",
    "Wed Apr 08 18:17:08 2009",
    "8/04/2009 17:09:46 -0700",
    "31/05/2009 08:59:59 -0000",
    "31/05/2009 02:20:13 -0700",
    "2/11/2009 16:34:32 -0800",
    "8/04/2009 17:09:46 -0700",
    "31/05/2009 08:59:59 -0000",
    "31/05/2009 02:20:13 -0700",
    "2/11/2009 16:34:32 -0800",
    "22/11/1992 07:25:19 -0800",
    "Wed Apr 08 18:17:08 2009",
    "Wed, Apr 08 18:17:08 2009",
    "01 Jan 2001 12:34:56 -0700",
    "01 Jan 2001 12:34:56 -0700 (MDT)",
    "01 Jan 2001 12:34:56 -0700 MDT",
    "1 Jan 2001 12:34:56 -0700",
    "Mon, 01 Jan 2001 12:34:56 -0700",
    "Mon, 01 Jan 2001 12:34:56 -0700 (MDT)",
    "Mon,  1 Jan 2001 12:34:56 -0700",
    "Mon,  1 Jan 2001 12:34:56 -0700 (MDT)",
    "Mon, 01 Jan 2001 12:34:56 -0700 (CEST)",
    "8/04/2009 17:09:46 -0700",
    "31/05/2009 08:59:59 -0000",
    "31/05/2009 02:20:13 -0700",
    "2/11/2009 16:34:32 -0800",
 // "Fri Jan 10 2014 2:34:17 PM EST",
  ).distinct

  // onthefly exceptions:
  lazy val testDates0: List[String] = List(
    "May 16,2014"
    ,"1992/04/13 23:59"                   // yyyy/MM/dd HH:mm
    ,"1992/01/01"                         // yyyy/MM/dd
    ,"8/04/2009 17:09:46 -0700"           // M/dd/yyyy HH:mm:ss -0700
    ,"31/05/2009 08:59:59 -0000"          // MM/dd/yyyy hh:mm:ss -0000
    ,"31/05/2009 02:20:13 -0700"          // MM/dd/yyyy hh:mm:ss -0700
    ,"2/11/2009 16:34:32 -0800"           // M/dd/yyyy HH:mm:ss -0800
    ,"04/08 18:17:08 2009"                // MM/dd HH:mm:ss yyyy
    ,"05/06/1993"                         // MM/dd/yyyy
    ,"2009/03/24 21:48:25.0"              // yyyy/MM:dd HH:mm:ss.S
    ,"2009/03/30 22:10:03"                // yyyy/MM/dd HH:mm:ss
  ).distinct

  lazy val testDates1: List[String] = List(
   "May 16,2014"
  ,"1992/03/04"
  ,"04/13/1992 11:59 PM"
  ,"04/13/1992 12:01 PM"
  ,"8/04/2009 17:09:46 -0700"
  ,"31/05/2009 08:59:59 -0000"
  ,"31/05/2009 02:20:13 -0700"
  ,"2/11/2009 16:34:32 -0800"
  ,"22/11/1992 07:25:19 -0800"
  ,"Wed Apr 08 18:17:08 2009"
  ,"Wed, Apr 08 18:17:08 2009"
  ,     "01 Jan 2001 12:34:56 -0700"
  ,     "01 Jan 2001 12:34:56 -0700 (MDT)"
  ,     "01 Jan 2001 12:34:56 -0700 MDT"
  ,      "1 Jan 2001 12:34:56 -0700"
  ,"Mon, 01 Jan 2001 12:34:56 -0700"
  ,"Mon, 01 Jan 2001 12:34:56 -0700 (MDT)"
  ,"Mon,  1 Jan 2001 12:34:56 -0700"
  ,"Mon,  1 Jan 2001 12:34:56 -0700 (MDT)"
  ,"Mon, 01 Jan 2001 12:34:56 -0700"
  ,"Mon, 01 Jan 2001 12:34:56 -0700 (CEST)"
  ,"Mon, 01 Jan 2001 12:34:56 -0700 (MDT)"
  ,"Mon,  1 Jan 2001 12:34:56 -0700"
  ,"Mon,  1 Jan 2001 12:34:56 -0700 (MDT)"
  ).distinct

  lazy val testDates2: List[String] = List(
    "04/13/1992 11:15 AM",
    "04/13/1992 12:32 PM",
    "04/13/1992 02:10 PM",
    "04/12/1992 01:58 PM",
    "04/12/1992 02:46 PM",
    "2009/03/24 21:48:25.0",
    "2009/03/30 22:10:03",
    "5/21/2009 5:37:39 PM",
    "5/21/2009 12:00:00 AM",
    "2/5/2009 1:31:58 PM",
    "2/5/2009 12:00:00 AM",
    "12/2/2008 6:49:53 PM",
    "12/2/2008 12:00:00 AM",
    "11/12/2008 10:20:06 AM",
    "5/10/2009 3:55:39 PM",
    "5/10/2009 12:00:00 AM",
    "4/10/2009 6:52:34 PM",
    "4/10/2009 12:00:00 AM",
    "3/13/2009 5:17:15 PM",
    "3/13/2009 12:00:00 AM",
    "3/10/2009 7:34:33 PM",
    "3/10/2009 12:00:00 AM",
    "2/10/2009 6:51:43 PM",
    "2/10/2009 12:00:00 AM",
    "2/5/2009 1:31:58 PM",
    "2/5/2009 12:00:00 AM",
    "1/10/2009 4:05:57 PM","1/10/2009 12:00:00 AM",
    "12/2/2008 6:49:53 PM","12/2/2008 12:00:00 AM",
    "11/12/2008 10:20:06 AM","11/12/2008 12:00:00 AM",
    "9/29/2008 2:19:51 PM","9/29/2008 12:00:00 AM",
    "9/29/2008 2:07:18 PM","9/29/2008 12:00:00 AM",
    "9/29/2008 2:06:17 PM","9/29/2008 12:00:00 AM",
    "9/29/2008 2:05:51 PM","9/29/2008 12:00:00 AM",
    "04/30/2009",
    "05/15/2009",
    "05/19/2009",
    "1992/01/01",
    "01/31/1992",
    "02/29/1992",
    "02/28/1993",
    "04/15/2009",
    "1992/03/04",
    "05/29/2009",
    "05/31/2009",
    "06/15/2009",
    "06/30/2009",
    "07/15/2009",
    "07/31/2009",
    "08/10/2009",
    "08/14/2009",
    "08/31/2009",
    "09/15/2009",
    "09/30/2009",
    "10/15/2009",
    "10/30/2009",
    "10/31/2009",
    "11/13/2009",
    "11/19/2009",
    "11/30/2009",
    "12/15/2009",
    "12/22/2009",
    "12/23/2009",
    "12/29/2009",
    "12/31/2009",
    "May 16,2014",
    "May 16, 2014",
  ).distinct
}

